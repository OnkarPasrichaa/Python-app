on:
  push:
    branches:
      - main

jobs:
  build-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx (optional)
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image (assuming Dockerfile is present)
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          docker build -t onkarpasrichaa/python_app:latest .
          echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin  # Masked password

      - name: Update Helm Chart (if Docker image tag changed)
        run: |
          # Get current image tag from Dockerfile
          OLD_IMAGE_TAG=$(grep -oP '(?<=onkarpasrichaa/python_app:)[\d.]+' Dockerfile)

          # Get new image tag from the image name after building
          NEW_IMAGE_TAG=$(docker images onkarpasrichaa/python_app:latest | awk '{print $1}')

          # Check if the tag actually changed before committing
          if [[ "$OLD_IMAGE_TAG" != "$NEW_IMAGE_TAG" ]]; then
            git config user.name "GitHub Actions"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git checkout main
            sed -i "s/onkarpasrichaa\/python_app:$OLD_IMAGE_TAG/onkarpasrichaa\/python_app:$NEW_IMAGE_TAG/g" helm/charts/python_app/values.yaml
            git add helm/charts/python_app/values.yaml
            git commit -m "Update image tag to $NEW_IMAGE_TAG (built on $(date +%Y-%m-%d-%H%M%S))"
            git push origin main
          fi
